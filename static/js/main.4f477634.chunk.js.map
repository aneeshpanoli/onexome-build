{"version":3,"sources":["components/footerGrid.js","components/footer.js","components/hero.js","navigation/avatarMenu.js","navigation/navbar.js","pages/home.js","components/themes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","height","width","backgroundColor","control","padding","spacing","FooterGrid","React","useState","classes","Grid","container","className","item","xs","Paper","elevation","Link","href","Footer","Jumbotron","fluid","Container","Hero","heroHeight","window","innerWidth","innerHeight","useEffect","style","backgroundImage","display","marginRight","Navbarmain","Component","palette","primary","light","main","dark","contrastText","secondary","createMuiTheme","textAlign","color","text","homePage","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6ZAaMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,OAAQ,IACRC,MAAO,IACPC,gBAAiB,eAEnBC,QAAS,CACPC,QAASR,EAAMS,QAAQ,QAIZ,SAASC,IAAc,IAAD,EACLC,IAAMC,SAAS,GADV,mBAC5BH,EAD4B,KAE7BI,GAF6B,KAEnBf,KAMhB,OACE,kBAACgB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWH,EAAQZ,KAAMQ,QAAS,GAChD,kBAACK,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACN,QAASA,GACrB,kBAACK,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAOH,UAAWH,EAAQV,MAAOiB,UAAW,GAC1C,kBAACC,EAAA,EAAD,CACIC,KAAK,IAET,kBAAC,IAAD,CAAYN,UAAU,SAHtB,UAMA,6BACA,kBAACK,EAAA,EAAD,CACIC,KAAK,IAEL,kBAAC,IAAD,CAAcN,UAAU,SAH5B,YAMA,6BACA,kBAACK,EAAA,EAAD,CACIC,KAAK,IAEL,kBAAC,IAAD,CAAeN,UAAU,SAH7B,aAMA,6BACA,kBAACK,EAAA,EAAD,CACIC,KAAK,IAEL,kBAAC,IAAD,CAAcN,UAAU,SAH5B,YAMA,6BACA,kBAACK,EAAA,EAAD,CACIC,KAAK,IAEL,kBAAC,IAAD,CAAaN,UAAU,SAH3B,WAOA,kBAACK,EAAA,EAAD,CACIC,KAAK,IAEL,kBAAC,IAAD,CAAaN,UAAU,SAH3B,WAMA,kBAACK,EAAA,EAAD,CACIC,KAAK,IAEL,kBAAC,IAAD,CAAUN,UAAU,SAHxB,cC7ED,SAASO,IACpB,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GAChB,kBAACC,EAAA,EAAD,KACE,uCACA,6BACE,kBAAChB,EAAD,MACF,+BCTK,SAASiB,IACpB,IAAIC,EAAcC,OAAOzB,OAASyB,OAAOxB,MAASwB,OAAOC,WAAaD,OAAOE,YAO7E,OANApB,IAAMqB,WAAU,eAQhB,yBAAKhB,UAAU,2BAA2BiB,MAAO,CAACC,gBAAiB,eAA0B7B,MAAM,CAACuB,iB,2FCAtF7B,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJkC,QAAS,QAEXhC,MAAO,CACLiC,YAAapC,EAAMS,QAAQ,Q,ICWhB4B,E,+KAxBUC,a,QCGnBC,ECHA,CACEC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,SDPVE,YAAeP,GACXxC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLK,QAASR,EAAMS,QAAQ,GACvBsC,UAAW,SACXC,MAAOhD,EAAMuC,QAAQU,KAAKJ,eAKf,SAASK,IACpB,OACI,6BACA,kBAAC,EAAD,MACA,kBAACvB,EAAD,MACA,kBAACJ,EAAD,OEfO4B,MARf,WACE,OACE,yBAAKnC,UAAU,OACb,kBAAC,EAAD,QCKcoC,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4f477634.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport AppsIcon from '@material-ui/icons/Apps';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 175,\n    width: 100,\n    backgroundColor: \"transparent\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function FooterGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setSpacing(Number(event.target.value));\n  };\n\n  return (\n    <Grid container className={classes.root} spacing={1}>\n      <Grid item xs={12}>\n        <Grid container spacing={spacing}>\n            <Grid >\n              <Paper className={classes.paper} elevation={0}>\n                <Link\n                    href=\"\"\n                >\n                <GitHubIcon className=\"mr-2\"/>\n                    GitHub\n                </Link>\n                <br></br>\n                <Link\n                    href=\"\"\n                >\n                    <LinkedInIcon className=\"mr-2\"/>\n                    LinkedIn\n                </Link>\n                <br></br>\n                <Link\n                    href=\"\"\n                >\n                    <InstagramIcon className=\"mr-2\"/>\n                    Instagram\n                </Link>\n                <br></br>\n                <Link\n                    href=\"\"\n                >\n                    <FacebookIcon className=\"mr-2\"/>\n                    Facebook\n                </Link>\n                <br></br>\n                <Link\n                    href=\"\"\n                >\n                    <TwitterIcon className=\"mr-2\"/>\n                    Twitter\n                </Link>\n\n                <Link\n                    href=\"\"\n                >\n                    <YouTubeIcon className=\"mr-2\"/>\n                    YouTube\n                </Link>\n                <Link\n                    href=\"\"\n                >\n                    <AppsIcon className=\"mr-2\"/>\n                    Slack\n                </Link>\n                </Paper>\n            </Grid>\n        </Grid>\n      </Grid>\n      \n    </Grid>\n  );\n}","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport FooterGrid from './footerGrid'\n\nexport default function Footer () {\n    return (\n        <Jumbotron fluid>\n        <Container>\n          <h1>Onexome</h1>\n          <hr></hr>\n            <FooterGrid />\n          <hr></hr>\n        </Container>\n      </Jumbotron>\n    );\n  }\n","import React, { Component } from 'react';\n// import heroimg from '../../Assets/img/hero.svg'\n\nexport default function Hero (){\n    let heroHeight = (window.height > window.width) ? window.innerWidth : window.innerHeight;\n    React.useEffect(() => {\n    function handleResize() {\n        heroHeight = (window.height > window.width) ? window.innerWidth : window.innerHeight;\n        console.log('resized to: ', window.innerWidth, 'x', window.innerHeight)\n      window.addEventListener('resize', handleResize)\n    }});\n    return (\n      \n    <div className=\"jumbotron hero-div mt-5 \" style={{backgroundImage: \"url(\" + \"heroimg\" + \")\", width:{heroHeight}}} >\n    </div>\n    );\n  }\n\n","\nimport Avatar from '@material-ui/core/Avatar';\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  paper: {\n    marginRight: theme.spacing(3),\n  },\n}));\n\nexport default function MenuListComposition() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n        <Button\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n        >\n         <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n        </Button>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\n                    <MenuItem onClick={handleClose}>My Projects</MenuItem>\n                    <MenuItem onClick={handleClose}>Logout</MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport AvatarMenu from './avatarMenu';\n// import cthLogo from '../../Assets/img/cth.svg'\n\nclass Navbarmain extends Component {\n  render() {\n    return (\n      // border-bottom border-dark \n        <Navbar className=\"pr-5 mt-3 pl-5\" bg=\"white\" variant=\"light\" sticky=\"top\">\n                <Navbar.Brand href=\"#home\">\n                    <img\n                    alt=\"\"\n                    // src={cthLogo}\n                    width=\"30\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                    />{' '}\n                    Onexome\n                </Navbar.Brand>\n                <div style={{position: 'absolute', right: 5, display: 'flex'}}>\n                {/* <AvatarMenu /> */}\n                </div>\n           \n        </Navbar>\n    );\n  }\n}\n\nexport default Navbarmain;\n\n\n","import React from 'react';\nimport mainPalette from '../components/themes'\nimport Footer from '../components/footer'\nimport Hero from '../components/hero'\nimport Navbar from '../navigation/navbar'\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport { useDispatch } from 'reactive-react-redux';\n\nconst palette = mainPalette();\nconst theme = createMuiTheme(palette);\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\nexport default function homePage (){\n    return (\n        <div>\n        <Navbar />\n        <Hero />\n        <Footer />\n        </div>\n    );\n}\n","\n\n\nexport default function mainPalette(){\n  return(\n      {\n        primary: {\n          light: '#757ce8',\n          main: '#3f50b5',\n          dark: '#002884',\n          contrastText: '#fff',\n        },\n        secondary: {\n          light: '#ff7961',\n          main: '#f44336',\n          dark: '#ba000d',\n          contrastText: '#000',\n        },\n      }\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport Home from './pages/home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}